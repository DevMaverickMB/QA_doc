Test ID,Preconditions,Steps to Execute,Expected Final Result,Severity/Priority
GRID_LOAD_001,User has permission to view the page. Default filters set.,1. Navigate to the page containing the Job Summary Grid.,The grid (`#grid`) loads and displays job data matching default filters. Pagination and totalizers are visible. Loading indicator shown and hidden.,High
GRID_SORT_001,Grid is loaded with multiple rows of data.,"1. Click the header of a sortable column (e.g., 'Job ID'). <br> 2. Click the same header again. <br> 3. Click the header of a different sortable column.",1. Grid data sorts ascending by Job ID. Sort indicator appears. <br> 2. Grid data sorts descending by Job ID. <br> 3. Grid data sorts by the new column.,Medium
GRID_PAGE_001,Grid is loaded with more rows than the page size.,1. Click the 'Next' page button. <br> 2. Click a specific page number button. <br> 3. Click the 'Previous' page button. <br> 4. Click the 'Last' page button. <br> 5. Click the 'First' page button.,Grid displays the correct subset of data for each page navigation action. Pager reflects the current page.,High
GRID_DBLCLK_001,"Grid is loaded with data, including a job with child tasks.",1. Double-click a row in the grid.,"The `#childTaskItems` modal appears, displaying the `#grid2` with child tasks for the double-clicked parent job.",High
GRID_NODATA_001,Filters are set such that no jobs match the criteria.,"1. Apply filter combinations (dates, dropdowns) guaranteed to return no results. <br> 2. Observe the grid area.","The grid displays a message indicating ""No data found"" or similar. Pagination might be hidden or disabled.",Medium
GRID_REFRESH_001,Grid is loaded.,"1. Change a filter value (e.g., select a different customer).","The grid shows a loading indicator briefly and then refreshes, displaying data matching the new filter criteria.",High
DATE_PICK_001,Grid is loaded.,1. Click `txtfromdate` and select a valid date. <br> 2. Click `txttodate` and select a valid date after the start date.,1. Grid refreshes with data starting from the selected date. <br> 2. Grid refreshes with data within the selected date range. Server state updated (`setSubmitDates` called).,High
DATE_PICK_002,Grid is loaded.,"1. Attempt to manually type an invalid date (e.g., ""abc"", ""32/01/2023"") into `txtfromdate`. <br> 2. Select an end date earlier than the start date.","1. Input might be prevented, cleared, or ignored on grid refresh attempt. Grid does not refresh with invalid date. <br> 2. Validation message might appear, or the grid refresh might use the previous valid range.",Medium
DATE_BTN_001,Grid is loaded.,1. Click `btnPastWeek`. <br> 2. Click `btnPastMonth`. <br> 3. Click `btnCalendarMonth`. <br> 4. Click `btnOperatingMonth`.,Date pickers update to the corresponding range for each button click. Grid refreshes showing data for that range. Server state updated.,High
DATE_ARROW_001,Grid is loaded. `btnPastWeek` active.,1. Click the 'Next' date arrow. <br> 2. Click the 'Previous' date arrow twice.,"1. Date range shifts forward by one week, grid refreshes. Server state updated (`setNextDates`). <br> 2. Date range shifts back by two weeks, grid refreshes. Server state updated (`setPrevDates`).",Medium
DDL_LOAD_001,Page is loading.,"1. Observe the filter dropdowns (`ddlStatus`, `ddlClientFront`, etc.) as the page loads.",All dropdowns are populated with lists of options.,High
DDL_FILTER_001,Grid is loaded with default filters.,1. Select one specific customer from `ddlClientFront`. <br> 2. Select multiple statuses from `ddlStatus`. <br> 3. Clear the selection from `ddlClientFront`.,1. Grid refreshes showing jobs only for the selected customer (and other active filters). <br> 2. Grid refreshes showing jobs matching any selected status. <br> 3. Grid refreshes showing jobs for all customers.,High
DDL_COMBO_001,Grid is loaded.,1. Set a specific date range. <br> 2. Select a specific Customer. <br> 3. Select a specific Status. <br> 4. Select a specific Operation Area.,"Grid refreshes after each selection, showing data that matches the *combination* of all currently active filters. Server state reflects all selections.",High
MODAL_OPEN_001,Parent grid (`#grid`) loaded with a job having child tasks.,1. Double-click the parent job row.,`#childTaskItems` modal opens. `#grid2` loads and displays the correct child tasks. Loading indicator shown/hidden.,High
MODAL_CLOSE_001,`#childTaskItems` modal is open.,1. Click the 'X' button in the modal header. <br> 2. Re-open the modal. <br> 3. Press the 'Escape' key. <br> 4. Re-open the modal. <br> 5. Click a 'Cancel' or 'Close' button if available.,Modal closes after each action.,Medium
CGRID_SORT_001,`#grid2` loaded with multiple child tasks.,1. Click a sortable column header in `#grid2`. <br> 2. Click again.,"Child grid sorts correctly by the column (ascending, then descending).",Medium
CGRID_EXPAND_001,`#grid2` loaded with a child task having FTIs.,1. Click the expand icon (+) for a child task row.,"The row expands, and the `#tblselectDetails` table is displayed, populated with FTI data fetched via `detailInit1`.",High
CGRID_ACTION_001,`#grid2` loaded. A child task action menu is available.,"1. Click the action menu (dots) for a child task. <br> 2. Select an action (e.g., 'PDF', 'Delete' - follow subsequent prompts).","1. Action menu appears. <br> 2. The selected action is initiated (PDF generated, Delete confirmation shown, etc.). See specific action test cases.",High
CGRID_REFRESH_001,"`#grid2` loaded. Perform an action that updates a child job (e.g., Approve).",1. Click the approval switch for a child job. <br> 2. Observe `#grid2`.,"The approval switch changes state visually. An AJAX call (`setChildAprove`) is made. `#grid2` refreshes (`refreshGridWithoutCollapsing`), showing the updated status. Expanded rows might remain expanded.",High
FTI_LOAD_001,"`#grid2` loaded, child row with FTIs exists.",1. Expand the child job row in `#grid2`.,"The `#tblselectDetails` table appears and is populated with the correct FTI data (Item, SKU, Price, Qty) via `detailInit1`.",High
FTI_EDIT_001,`#tblselectDetails` is visible and populated.,1. Modify the value in a 'Price' input field. <br> 2. Modify the value in a 'Quantity' input field for the same or different item.,1. The Price input field reflects the new value. <br> 2. The Quantity input field reflects the new value.,High
FTI_SAVE_001,"`#tblselectDetails` is visible, Price/Quantity values modified.",1. Click the 'Save' button (`.btnSave`).,AJAX call to `UpdateFieldTicketItemDetails` is made successfully. Data is saved in the DB (via SP `UpdateFTINew`). `#grid2` refreshes. Success message may appear.,High
FTI_SAVE_002,`#tblselectDetails` is visible.,1. Enter non-numeric text into a 'Price' input. <br> 2. Enter a negative number into 'Quantity'. <br> 3. Click 'Save'.,"Validation (`checkTotal`) triggers. An error message is displayed. AJAX call to save is *not* made, or if made, returns an error. Invalid data is not saved.",Medium
FTI_DELETE_001,`#tblselectDetails` is visible with multiple items.,1. Click the 'Delete' button for a specific FTI row (if available). <br> 2. Confirm deletion if prompted.,The row is removed from the UI. An AJAX/SP call is made to delete the item from the database. `#grid2` might refresh.,Medium
FTI_APPLYQ_001,`#tblselectDetails` visible. Quoted quantities exist for the job.,1. Click the 'Apply Quoted Quantities' button (if available).,"Quantity fields update to match the quoted quantities. An AJAX/SP call (using `applyQuotedQuantities` param?) is made. User might need to click 'Save' afterwards, or it might auto-save.",Medium
APPROVE_P_001,"Parent job row visible in `#grid`, job is unapproved.",1. Click the approval switch for the parent job row to the 'Approved' state.,"`SetAllChildApprove` called with approve=1. AJAX call to `UpdateAproveStatusOfAllChild` succeeds. DB updated. `#grid` refreshes, showing the parent job as approved. Eligible child jobs may also be approved.",High
APPROVE_P_002,"Parent job row visible in `#grid`, job is approved.",1. Click the approval switch for the parent job row to the 'Unapproved' state.,"`SetAllChildApprove` called with approve=0. AJAX call to `UpdateAproveStatusOfAllChild` succeeds. DB updated. `#grid` refreshes, showing the parent job as unapproved. Child jobs might also be unapproved.",High
APPROVE_C_001,"Child job row visible in `#grid2`, job is unapproved. Resource reqs met.",1. Click the approval switch for the child job row to the 'Approved' state.,"`setChildAprove` called with approve=1. AJAX call to `UpdateAproveStatusOfChild` succeeds. DB updated. `#grid2` refreshes (`refreshGridWithoutCollapsing`), showing the child job as approved.",High
APPROVE_C_002,"Child job row visible in `#grid2`, job is approved.",1. Click the approval switch for the child job row to the 'Unapproved' state.,"`setChildAprove` called with approve=0. AJAX call to `UpdateAproveStatusOfChild` succeeds. DB updated. `#grid2` refreshes, showing the child job as unapproved.",High
APPROVE_C_003,"Child job row visible in `#grid2`, job is unapproved. Resource reqs NOT met.",1. Click the approval switch for the child job row to the 'Approved' state.,`setChildAprove` called. AJAX call to `UpdateAproveStatusOfChild` is made. Server-side validation fails. DB status is NOT updated. An error message is displayed to the user. Switch reverts to 'Unapproved'.,High
ACTION_MENU_001,Grid row visible in `#grid` or `#grid2`.,1. Click the action menu (dots) icon for the row.,The action menu dropdown appears next to the icon.,High
ACTION_MENU_002,"Grid row visible. Job is in a specific status (e.g., Approved). User has perms.",1. Click the action menu (dots). <br> 2. Verify available actions.,"Menu shows relevant actions for an Approved job (e.g., PDF, Email might be enabled; Delete might be disabled).",Medium
ACTION_MENU_003,"Grid row visible. Job is in a different status (e.g., New). User has perms.",1. Click the action menu (dots). <br> 2. Verify available actions.,"Menu shows relevant actions for a New job (e.g., Push might be enabled; Email might be disabled).",Medium
ACTION_PDF_001,Parent grid row visible. User has permissions.,1. Click action menu. <br> 2. Click 'PDF'.,`SavepdfParent` (optional) and `.pdfParent` called. New window/iframe opens targeting `1523.aspx`. PDF report for the parent job is generated and displayed/downloaded.,High
ACTION_PDF_002,Child grid row visible in `#grid2`. User has permissions.,1. Click action menu. <br> 2. Click 'PDF'.,`.pdfChild` called. New window/iframe opens targeting `1523.aspx`. PDF report for the child job is generated and displayed/downloaded.,High
ACTION_EMAIL_001,"Parent grid row visible, job is Approved. User has permissions.",1. Click action menu. <br> 2. Click 'Email'.,"`JobSummary_SendEmail` called. `#SendEmaill` modal opens, populated with recipient details.",High
ACTION_DEL_P_001,Parent grid row visible. User has delete permissions.,1. Click action menu. <br> 2. Click 'Delete'. <br> 3. Confirm the action in the SweetAlert dialog.,"`deleteParent` called. Confirmation shown. If confirmed, `actionPerform` WebMethod (DELETEPARENT) called. Job deleted in DB. `#grid` refreshes, job is gone. Success message shown.",High
ACTION_DEL_C_001,Child grid row visible in `#grid2`. User has delete permissions.,1. Click action menu. <br> 2. Click 'Delete'. <br> 3. Confirm the action in the dialog.,"`#btnDeleteChild` handler called. Confirmation shown. If confirmed, `actionPerform` WebMethod (DELETECHILD) called. Child job deleted/inactivated in DB. `#grid2` refreshes.",High
ACTION_COPY_C_001,Child grid row visible in `#grid2`. User has permissions.,1. Click action menu. <br> 2. Click 'Copy'.,"`CopyChildJob` JS called. `CopyChild` WebMethod called. SP action 'COPYCHILD' executed. `#grid2` refreshes, showing the duplicated child job.",Medium
ACTION_PUSH_C_001,"Child grid row visible in `#grid2`, status is 'New'. User has permissions.",1. Click action menu. <br> 2. Click 'Push'.,`#divPushChildJobWindowDialog` modal opens.,Medium
ACTION_DEPLOY_C_001,Child grid row visible in `#grid2`. User has permissions.,1. Click action menu. <br> 2. Click 'Deployment Time'.,`#divDeploymentTimeWindowDialog` modal opens.,Medium
EMAIL_OPEN_001,"Parent job approved, visible in `#grid`. Email not sent before. User has perms.",1. Click Action Menu -> Email.,"`JobSummary_SendEmail` calls `GetEmailDetails`. `#SendEmaill` modal opens, pre-populated with default recipients. Email history section might be empty or hidden.",High
EMAIL_OPEN_002,"Parent job approved, visible in `#grid`. Email *was* sent before. User has perms.",1. Click Action Menu -> Email.,"`JobSummary_SendEmail` calls `GetSendEmailDetails`. `#SendEmaill` modal opens, pre-populated with previous recipients. Email history section shows previous send details.",High
EMAIL_ADD_001,`#SendEmaill` modal is open.,1. Enter a valid email address in the manual entry field. <br> 2. Add the email to the list. <br> 3. Enter an invalid email address. <br> 4. Attempt to add it.,"1. Email entered. <br> 2. Email appears in the recipient list. <br> 3. Invalid email entered. <br> 4. An error message is shown, or the invalid email is not added to the list.",Medium
EMAIL_SEND_001,`#SendEmaill` modal is open. Valid recipients selected/entered. Custom message typed.,1. Click the 'Send' button (`#btnSendEmail`).,`sendEmsils` called. AJAX call to `SendEmailDetails` succeeds. SP `SendEmails` logs details. Email is queued/sent. Modal closes. Parent grid (`#grid`) refreshes. Success message shown.,High
EMAIL_SEND_002,`#SendEmaill` modal is open. No recipients selected/entered.,1. Click the 'Send' button.,"Validation might prevent sending. An error message ""Please select recipients"" or similar should appear. AJAX call is not made.",Medium
COMMENT_OPEN_001,"Parent grid row visible, has comment icon.",1. Click the comment icon for the parent job row.,`openCommentBox` called. `#commentDialog` modal opens. Iframe inside loads `1714.aspx?val=<parent_job_id>`. Comments are visible inside iframe.,Medium
COMMENT_CLOSE_001,`#commentDialog` modal is open.,1. Click the 'X' button or a 'Close' button in the modal.,Modal closes successfully.,Medium
COMMENT_INTERACT_001,"`#commentDialog` modal open, `1714.aspx` loaded.","1. Perform actions within the iframe (e.g., add a comment).",Actions within `1714.aspx` succeed according to its own specifications. (Requires separate testing of 1714.aspx).,Medium
DEPLOY_OPEN_001,Child row visible in `#grid2`. Action menu available.,1. Click Action Menu -> Deployment Time.,`#divDeploymentTimeWindowDialog` modal opens.,Medium
DEPLOY_SET_001,`#divDeploymentTimeWindowDialog` modal is open.,"1. Select a specific Hour, Minute, and AM/PM. <br> 2. Click the Submit/Save button.",AJAX call made to update deployment time. SP updates `departureTime`. Modal closes. `#grid2` may refresh showing the updated time. Success message shown.,Medium
DEPLOY_CLOSE_001,`#divDeploymentTimeWindowDialog` modal is open.,1. Click the 'X' or 'Cancel' button.,Modal closes without saving any changes.,Medium
PUSH_OPEN_001,"Child row visible in `#grid2`, status is 'New'. Action menu available.",1. Click Action Menu -> Push.,`#divPushChildJobWindowDialog` modal opens. Date/time pickers are visible.,Medium
PUSH_OPEN_002,"Child row visible in `#grid2`, status is *not* 'New'. Action menu available.",1. Click Action Menu.,"'Push' action should ideally be disabled or hidden. If clickable, clicking it should result in no action or an informative message, and the modal should not open.",Medium
PUSH_SET_001,`#divPushChildJobWindowDialog` modal is open.,1. Select a new future date and time. <br> 2. Check the 'Copy Resources' checkbox. <br> 3. Click the Submit/Push button.,"Resource conflicts checked (assume none). AJAX/SP call made to reschedule the job and copy resources. Modal closes. `#grid2` refreshes, showing the updated start date/time. Success message shown.",Medium
PUSH_CONFLICT_001,`#divPushChildJobWindowDialog` modal is open. Selected new time has conflicts.,1. Select a new date and time known to cause resource conflicts. <br> 2. Observe the modal.,"A message or indicator appears in the modal showing the potential resource conflicts. Submit button might be disabled, or submission might fail with a specific error.",Medium
PUSH_CLOSE_001,`#divPushChildJobWindowDialog` modal is open.,1. Click the 'X' or 'Cancel' button.,Modal closes without rescheduling the job.,Medium
